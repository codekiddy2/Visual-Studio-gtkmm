Copyright (C) 2015 codekiddy

For Copyright notices see Licence.txt attached to solution.

Please do not remove this file or it's contents from solution as it
contains important usage information.

solution design by codekiddy https://github.com/codekiddy2/Visual-Studio-gtkmm

**************************************************************************************************************************************************************************
**************************************************************************************************************************************************************************
INFO:
solution version = 1.0.2
solution directory = D:\GitHub\Visual-Studio-gtkmm\projects\boost_1_61_0\msvc-140
properties directory = D:\GitHub\Visual-Studio-gtkmm\properties
official sources: http://www.boost.org/

**************************************************************************************************************************************************************************
**************************************************************************************************************************************************************************
DEPENDENCIES:
zlib (optional)
iconv (optional)
bzip2 (optional)
icu (optional)

**************************************************************************************************************************************************************************
**************************************************************************************************************************************************************************
INSTRUCTIONS:
this solution will build boost with zlib, bzip2, icu and iconv support.
using python2 (freeorion compatibility), change to python3 in solution level property page to compile for python3.
edit^ set to python3 and removed ICU (to rebuild python only delete python build from intermediate dir)

Perform build as Admin (open VS as administrator) to make test mklink success. (not tested, clean build needed to see output)
Open Solution select configuration and build.
errors related to post-build-event can be ignored, to be sure boost was built correctly,
search for "The Boost C++ Libraries were successfully built!" in the output window.

**************************************************************************************************************************************************************************
**************************************************************************************************************************************************************************
NOTES:
Boost build getting started:
http://www.boost.org/doc/libs/1_59_0/more/getting_started/windows.html

Boost build built in features:
http://www.boost.org/build/doc/html/bbv2/overview/builtins/features.html

Boost build documentation:
http://www.boost.org/build/doc/html/index.html

Build events must be separated, b2 --install won't work in same build event as bootstrap.bat
fixed build PDB's, use: --debug-symbols=on (note the "--" in front, otherwise won't work)
Define:
BOOST_ALL_DYN_LINK to auto link to dll libs
BOOST_ALL_NO_LIB to link manually

Following was hard to learn, it's worth noting down:

SET BZIP2_BINARY=bzip2.dll					-the name of the *import* library (not dll)
SET BZIP2_INCLUDE=$(INCLUDE_DIR)bzip2	-include search path
SET BZIP2_LIBPATH=$(LIB_DIR)				-library search path

SET ZLIB_BINARY=zlib.dll
SET ZLIB_LIBPATH=$(LIB_DIR)
SET ZLIB_INCLUDE=$(INCLUDE_DIR)zlib

if there is no macro for library then compiler and linker flags passed are as folows:

$(B2_DIR)b2 cxxflags="-I $(INCLUDE_DIR)iconv" linkflags="-LIBPATH:$(LIB_DIR) iconv.dll.lib"
$(B2_DIR)b2 cxxflags="/I $(INCLUDE_DIR)iconv /I $(INCLUDE_DIR)zlib /I $(INCLUDE_DIR) /LIBPATH:$(LIB_DIR) -link zlib.dll.lib iconv.dll.lib"

following did not work:
-sZLIB_BINARY=zlib.dll.lib -sZLIB_INCLUDE="D:\GitHub\Visual-Studio-gtkmm\output\v140\Release\x64\include\zlib" -sZLIB_LIBPATH="D:\GitHub\Visual-Studio-gtkmm\output\v140\Release\x64\lib"

following is probably incorrect:
SET ICONV_BINARY=iconv.dll
SET ICONV_INCLUDE=$(INCLUDE_DIR)iconv
SET ICONV_LIBPATH=$(LIB_DIR)
SET ICONV_PATH=$(ROOT_DIR)

set following variable (only ?) to make boost build zlib "boost_zlib.lib"
SET ZLIB_SOURCE=D:\Github\Visual-Studio-gtkmm\projects\zlib-1.2.8

if ICU libs have non-standard name (as is the case here) set icu link like so:
SET ICU_LINK="icudt.dll.lib icuin.dll.lib icuio.dll.lib icule.dll.lib iculx.dll.lib icuuc.dll.lib"

set include search path for ICU:
cxxflags="/I$(INCLUDE_DIR)icu"

if python is not in path use following before invoking b2:
SET PATH=$(INSTALL_DIR)Python35;$(INSTALL_DIR)Python35\Scripts;%PATH%

since v1.61.0
removed ICU_LINK and set to use python3

**************************************************************************************************************************************************************************
**************************************************************************************************************************************************************************
TESTINGS:
1.0.0
	Debug x64
	Release x64
	Debug x86
	Release x86

**************************************************************************************************************************************************************************
**************************************************************************************************************************************************************************
TODO:
Add test projects
separeate "install" project
build mpi ( Graph library does not contain MPI-based parallel components )
fix post build event error (the cause is: single error during build process, tells it's post-build event error which is not)
make libs *.dll.lib, currently it's *.lib
make clean/rebuild possible

make non icu build configuration

TEMP:
original configuration for postbuild event:

$(DRIVE):
cd $(SRC_DIR)
SET BZIP2_BINARY=bzip2.dll
SET BZIP2_INCLUDE=$(INCLUDE_DIR)bzip2
SET BZIP2_LIBPATH=$(LIB_DIR)
SET ZLIB_BINARY=zlib.dll
SET ZLIB_LIBPATH=$(LIB_DIR)
SET ZLIB_INCLUDE=$(INCLUDE_DIR)zlib
SET PATH=$(PYTHON2_DIR);$(PYTHON2_DIR)Scripts;%PATH%
SET ICU_LINK="icudt.dll.lib icuin.dll.lib icuio.dll.lib icule.dll.lib iculx.dll.lib icuuc.dll.lib"
$(B2_DIR)b2 --without-mpi --debug-symbols=on cflags="/I$(INCLUDE_DIR)iconv /I$(INCLUDE_DIR)icu /D_CRT_SECURE_NO_WARNINGS /W2 /wd4348 /wd4251" linkflags="/DEBUG /PDB:$(SYMBOLS_DIR) /LIBPATH:$(LIB_DIR) iconv.dll.lib" --layout=$(LAYOUT) link=$(LINK) threading=$(THREADING) variant=$(VARIANT) toolset=msvc-$(MSBuildToolsVersion) address-model=$(PlatformArchitecture) runtime-link=$(RUNTIME) --build-dir=$(ROOT_DIR)intermediate
cd $(STAGE_DIR)lib
if exist *.lib move /Y *.lib $(LIB_DIR)
if exist *.dll move /Y *.dll $(BIN_DIR)
cd $(SRC_DIR)boost
if not exist $(INCLUDE_DIR)boost mkdir $(INCLUDE_DIR)boost
echo Installing headers, please wait...
xcopy .\* $(INCLUDE_DIR)boost /EFQY
