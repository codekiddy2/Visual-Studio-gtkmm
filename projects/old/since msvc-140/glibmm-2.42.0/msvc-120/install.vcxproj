<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="12.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|Win32">
      <Configuration>Debug</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|Win32">
      <Configuration>Release</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGuid>{2093D218-190E-4194-9421-3BA7CBF33B10}</ProjectGuid>
    <RootNamespace>install</RootNamespace>
    <Keyword>Win32Proj</Keyword>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <CharacterSet>NotSet</CharacterSet>
    <PlatformToolset>v120</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <CharacterSet>NotSet</CharacterSet>
    <PlatformToolset>v120</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <CharacterSet>NotSet</CharacterSet>
    <PlatformToolset>v120</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <CharacterSet>NotSet</CharacterSet>
    <PlatformToolset>v120</PlatformToolset>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
    <Import Project="..\..\..\properties\base_release_32.props" />
    <Import Project="..\..\..\properties\base_utility.props" />
    <Import Project="..\..\..\properties\solution_glibmm.props" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
    <Import Project="..\..\..\properties\base_debug_32.props" />
    <Import Project="..\..\..\properties\base_utility.props" />
    <Import Project="..\..\..\properties\solution_glibmm.props" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
    <Import Project="..\..\..\properties\base_release_64.props" />
    <Import Project="..\..\..\properties\base_utility.props" />
    <Import Project="..\..\..\properties\solution_glibmm.props" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
    <Import Project="..\..\..\properties\base_debug_64.props" />
    <Import Project="..\..\..\properties\base_utility.props" />
    <Import Project="..\..\..\properties\solution_glibmm.props" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup>
    <ExtensionsToDeleteOnClean Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" />
    <ExtensionsToDeleteOnClean Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" />
    <ExtensionsToDeleteOnClean Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" />
    <ExtensionsToDeleteOnClean Condition="'$(Configuration)|$(Platform)'=='Release|x64'" />
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <PreBuildEvent>
      <Command>$(DRIVE):
cd $(INCLUDE_DIR)
if not exist glibmm mkdir glibmm
cd glibmm
echo installing headers ...
xcopy $(SRC_DIR)glib\*.h /YS
xcopy $(SRC_DIR)gio\*.h /YS
cd $(LIB_DIR)
if not exist glibmm\include mkdir glibmm\include
cd glibmm\include
copy $(SolutionDir)glibmm\glibmmconfig.h /Y
cd ..\..\
if not exist giomm\include mkdir giomm\include
cd giomm\include
copy $(SolutionDir)giomm\giommconfig.h /Y
cd $(REF_DIR)
if not exist glibmm\html mkdir glibmm\html
cd glibmm\html
echo installing documentation ...
xcopy $(SRC_DIR)docs\reference\html\*.* /Y</Command>
    </PreBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <PreBuildEvent>
      <Command>$(DRIVE):
cd $(INCLUDE_DIR)
if not exist glibmm mkdir glibmm
cd glibmm
echo installing headers ...
xcopy $(SRC_DIR)glib\*.h /YS
xcopy $(SRC_DIR)gio\*.h /YS
cd $(LIB_DIR)
if not exist glibmm\include mkdir glibmm\include
cd glibmm\include
copy $(SolutionDir)glibmm\glibmmconfig.h /Y
cd ..\..\
if not exist giomm\include mkdir giomm\include
cd giomm\include
copy $(SolutionDir)giomm\giommconfig.h /Y
cd $(REF_DIR)
if not exist glibmm\html mkdir glibmm\html
cd glibmm\html
echo installing documentation ...
xcopy $(SRC_DIR)docs\reference\html\*.* /Y</Command>
    </PreBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <PreBuildEvent>
      <Command>$(DRIVE):
cd $(INCLUDE_DIR)
if not exist glibmm mkdir glibmm
cd glibmm
echo installing headers ...
xcopy $(SRC_DIR)glib\*.h /YS
xcopy $(SRC_DIR)gio\*.h /YS
cd $(LIB_DIR)
if not exist glibmm\include mkdir glibmm\include
cd glibmm\include
copy $(SolutionDir)glibmm\glibmmconfig.h /Y
cd ..\..\
if not exist giomm\include mkdir giomm\include
cd giomm\include
copy $(SolutionDir)giomm\giommconfig.h /Y
cd $(REF_DIR)
if not exist glibmm\html mkdir glibmm\html
cd glibmm\html
echo installing documentation ...
xcopy $(SRC_DIR)docs\reference\html\*.* /Y</Command>
    </PreBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <PreBuildEvent>
      <Command>$(DRIVE):
cd $(INCLUDE_DIR)
if not exist glibmm mkdir glibmm
cd glibmm
echo installing headers ...
xcopy $(SRC_DIR)glib\*.h /YS
xcopy $(SRC_DIR)gio\*.h /YS
cd $(LIB_DIR)
if not exist glibmm\include mkdir glibmm\include
cd glibmm\include
copy $(SolutionDir)glibmm\glibmmconfig.h /Y
cd ..\..\
if not exist giomm\include mkdir giomm\include
cd giomm\include
copy $(SolutionDir)giomm\giommconfig.h /Y
cd $(REF_DIR)
if not exist glibmm\html mkdir glibmm\html
cd glibmm\html
echo installing documentation ...
xcopy $(SRC_DIR)docs\reference\html\*.* /Y</Command>
    </PreBuildEvent>
  </ItemDefinitionGroup>
  <ItemGroup>
    <ProjectReference Include="giomm.vcxproj">
      <Project>{ee6c0430-c2c9-425c-8eba-963fac3e9832}</Project>
      <ReferenceOutputAssembly>false</ReferenceOutputAssembly>
    </ProjectReference>
    <ProjectReference Include="glibmm.vcxproj">
      <Project>{58b2b53c-c4ff-47fd-817b-095e45b7f7d4}</Project>
      <ReferenceOutputAssembly>false</ReferenceOutputAssembly>
    </ProjectReference>
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>